; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB OLDNAMES

EXTRN	__imp_strcat_s:PROC
EXTRN	__imp_strncat_s:PROC
	ORG $+8
KanaTable DB	0a5H, 0a1H, 00H
	DB	0a5H, 0a2H, 00H
	DB	0a5H, 0a3H, 00H
	DB	0a5H, 0a4H, 00H
	DB	0a5H, 0a5H, 00H
	DB	0a5H, 0a6H, 00H
	DB	0a5H, 0a7H, 00H
	DB	0a5H, 0a8H, 00H
	DB	0a5H, 0a9H, 00H
	DB	0a5H, 0aaH, 00H
	DB	0a5H, 0abH, 00H
	DB	0a5H, 0acH, 00H
	DB	0a5H, 0adH, 00H
	DB	0a5H, 0aeH, 00H
	DB	0a5H, 0afH, 00H
	DB	0a5H, 0b0H, 00H
	DB	0a5H, 0b1H, 00H
	DB	0a5H, 0b2H, 00H
	DB	0a5H, 0b3H, 00H
	DB	0a5H, 0b4H, 00H
	DB	0a5H, 0b5H, 00H
	DB	0a5H, 0b6H, 00H
	DB	0a5H, 0b7H, 00H
	DB	0a5H, 0b8H, 00H
	DB	0a5H, 0b9H, 00H
	DB	0a5H, 0baH, 00H
	DB	0a5H, 0bbH, 00H
	DB	0a5H, 0bcH, 00H
	DB	0a5H, 0bdH, 00H
	DB	0a5H, 0beH, 00H
	DB	0a5H, 0bfH, 00H
	DB	0a5H, 0c0H, 00H
	DB	0a5H, 0c1H, 00H
	DB	0a5H, 0c2H, 00H
	DB	0a5H, 0c3H, 00H
	DB	0a5H, 0c4H, 00H
	DB	0a5H, 0c5H, 00H
	DB	0a5H, 0c6H, 00H
	DB	0a5H, 0c7H, 00H
	DB	0a5H, 0c8H, 00H
	DB	0a5H, 0c9H, 00H
	DB	0a5H, 0caH, 00H
	DB	0a5H, 0cbH, 00H
	DB	0a5H, 0ccH, 00H
	DB	0a5H, 0cdH, 00H
	DB	0a5H, 0ceH, 00H
	DB	0a5H, 0cfH, 00H
	DB	0a5H, 0d0H, 00H
	DB	0a5H, 0d1H, 00H
	DB	0a5H, 0d2H, 00H
	DB	0a5H, 0d3H, 00H
	DB	0a5H, 0d4H, 00H
	DB	0a5H, 0d5H, 00H
	DB	0a5H, 0d6H, 00H
	DB	0a5H, 0d7H, 00H
	DB	0a5H, 0d8H, 00H
	DB	0a5H, 0d9H, 00H
	DB	0a5H, 0daH, 00H
	DB	0a5H, 0dbH, 00H
	DB	0a5H, 0dcH, 00H
	DB	0a5H, 0ddH, 00H
	DB	0a5H, 0deH, 00H
	DB	0a5H, 0dfH, 00H
	DB	0a5H, 0e0H, 00H
	DB	0a5H, 0e1H, 00H
	DB	0a5H, 0e2H, 00H
	DB	0a5H, 0e3H, 00H
	DB	0a5H, 0e4H, 00H
	DB	0a5H, 0e5H, 00H
	DB	0a5H, 0e6H, 00H
	DB	0a5H, 0e7H, 00H
	DB	0a5H, 0e8H, 00H
	DB	0a5H, 0e9H, 00H
	DB	0a5H, 0eaH, 00H
	DB	0a5H, 0ebH, 00H
	DB	0a5H, 0ecH, 00H
	DB	0a5H, 0edH, 00H
	DB	0a5H, 0eeH, 00H
	DB	0a5H, 0efH, 00H
	DB	0a5H, 0f0H, 00H
	DB	0a5H, 0f1H, 00H
	DB	0a5H, 0f2H, 00H
	DB	0a5H, 0f3H, 00H
	DB	0a5H, 0f4H, 00H
	DB	0a5H, 0f5H, 00H
	DB	0a5H, 0f6H, 00H
	DB	0a9H, 'c', 00H
	DB	0a9H, 'd', 00H
	DB	0a9H, '`', 00H
	DB	0a1H, 0a3H, 00H
	DB	0a1H, 0b8H, 00H
	DB	0a1H, 0b9H, 00H
	DB	0a1H, 0a2H, 00H
	DB	'?', 00H
	ORG $+1
	ORG $+6
HiraTable DB	0a4H, 0a1H, 00H
	DB	0a4H, 0a2H, 00H
	DB	0a4H, 0a3H, 00H
	DB	0a4H, 0a4H, 00H
	DB	0a4H, 0a5H, 00H
	DB	0a4H, 0a6H, 00H
	DB	0a4H, 0a7H, 00H
	DB	0a4H, 0a8H, 00H
	DB	0a4H, 0a9H, 00H
	DB	0a4H, 0aaH, 00H
	DB	0a4H, 0abH, 00H
	DB	0a4H, 0acH, 00H
	DB	0a4H, 0adH, 00H
	DB	0a4H, 0aeH, 00H
	DB	0a4H, 0afH, 00H
	DB	0a4H, 0b0H, 00H
	DB	0a4H, 0b1H, 00H
	DB	0a4H, 0b2H, 00H
	DB	0a4H, 0b3H, 00H
	DB	0a4H, 0b4H, 00H
	DB	0a4H, 0b5H, 00H
	DB	0a4H, 0b6H, 00H
	DB	0a4H, 0b7H, 00H
	DB	0a4H, 0b8H, 00H
	DB	0a4H, 0b9H, 00H
	DB	0a4H, 0baH, 00H
	DB	0a4H, 0bbH, 00H
	DB	0a4H, 0bcH, 00H
	DB	0a4H, 0bdH, 00H
	DB	0a4H, 0beH, 00H
	DB	0a4H, 0bfH, 00H
	DB	0a4H, 0c0H, 00H
	DB	0a4H, 0c1H, 00H
	DB	0a4H, 0c2H, 00H
	DB	0a4H, 0c3H, 00H
	DB	0a4H, 0c4H, 00H
	DB	0a4H, 0c5H, 00H
	DB	0a4H, 0c6H, 00H
	DB	0a4H, 0c7H, 00H
	DB	0a4H, 0c8H, 00H
	DB	0a4H, 0c9H, 00H
	DB	0a4H, 0caH, 00H
	DB	0a4H, 0cbH, 00H
	DB	0a4H, 0ccH, 00H
	DB	0a4H, 0cdH, 00H
	DB	0a4H, 0ceH, 00H
	DB	0a4H, 0cfH, 00H
	DB	0a4H, 0d0H, 00H
	DB	0a4H, 0d1H, 00H
	DB	0a4H, 0d2H, 00H
	DB	0a4H, 0d3H, 00H
	DB	0a4H, 0d4H, 00H
	DB	0a4H, 0d5H, 00H
	DB	0a4H, 0d6H, 00H
	DB	0a4H, 0d7H, 00H
	DB	0a4H, 0d8H, 00H
	DB	0a4H, 0d9H, 00H
	DB	0a4H, 0daH, 00H
	DB	0a4H, 0dbH, 00H
	DB	0a4H, 0dcH, 00H
	DB	0a4H, 0ddH, 00H
	DB	0a4H, 0deH, 00H
	DB	0a4H, 0dfH, 00H
	DB	0a4H, 0e0H, 00H
	DB	0a4H, 0e1H, 00H
	DB	0a4H, 0e2H, 00H
	DB	0a4H, 0e3H, 00H
	DB	0a4H, 0e4H, 00H
	DB	0a4H, 0e5H, 00H
	DB	0a4H, 0e6H, 00H
	DB	0a4H, 0e7H, 00H
	DB	0a4H, 0e8H, 00H
	DB	0a4H, 0e9H, 00H
	DB	0a4H, 0eaH, 00H
	DB	0a4H, 0ebH, 00H
	DB	0a4H, 0ecH, 00H
	DB	0a4H, 0edH, 00H
	DB	0a4H, 0eeH, 00H
	DB	0a4H, 0efH, 00H
	DB	0a4H, 0f0H, 00H
	DB	0a4H, 0f1H, 00H
	DB	0a4H, 0f2H, 00H
	DB	0a4H, 0f3H, 00H
	DB	0a1H, 0a1H, 00H
	DB	0a1H, 0a1H, 00H
	DB	0a1H, 0a1H, 00H
	DB	0a9H, 'f', 00H
	DB	0a9H, 'g', 00H
	DB	0a9H, '`', 00H
	DB	0a1H, 0a3H, 00H
	DB	0a1H, 0b8H, 00H
	DB	0a1H, 0b9H, 00H
	DB	0a1H, 0a2H, 00H
	DB	'?', 00H
	ORG $+1
	DB	0a3H, 0a1H, 00H
	DB	0a1H, 0b1H, 00H
	DB	0a3H, 0a3H, 00H
	DB	0a1H, 0e7H, 00H
	DB	0a3H, 0a5H, 00H
	DB	0a3H, 0a6H, 00H
	DB	0a1H, 0afH, 00H
	DB	0a3H, 0a8H, 00H
	DB	0a3H, 0a9H, 00H
	DB	0a3H, 0aaH, 00H
	DB	0a3H, 0abH, 00H
	DB	0a3H, 0acH, 00H
	DB	0a3H, 0adH, 00H
	DB	0a3H, 0aeH, 00H
	DB	0a3H, 0afH, 00H
	DB	0a3H, 0b0H, 00H
	DB	0a3H, 0b1H, 00H
	DB	0a3H, 0b2H, 00H
	DB	0a3H, 0b3H, 00H
	DB	0a3H, 0b4H, 00H
	DB	0a3H, 0b5H, 00H
	DB	0a3H, 0b6H, 00H
	DB	0a3H, 0b7H, 00H
	DB	0a3H, 0b8H, 00H
	DB	0a3H, 0b9H, 00H
	DB	0a3H, 0baH, 00H
	DB	0a3H, 0bbH, 00H
	DB	0a3H, 0bcH, 00H
	DB	0a3H, 0bdH, 00H
	DB	0a3H, 0beH, 00H
	DB	0a3H, 0bfH, 00H
	DB	0a3H, 0c0H, 00H
	DB	0a3H, 0c1H, 00H
	DB	0a3H, 0c2H, 00H
	DB	0a3H, 0c3H, 00H
	DB	0a3H, 0c4H, 00H
	DB	0a3H, 0c5H, 00H
	DB	0a3H, 0c6H, 00H
	DB	0a3H, 0c7H, 00H
	DB	0a3H, 0c8H, 00H
	DB	0a3H, 0c9H, 00H
	DB	0a3H, 0caH, 00H
	DB	0a3H, 0cbH, 00H
	DB	0a3H, 0ccH, 00H
	DB	0a3H, 0cdH, 00H
	DB	0a3H, 0ceH, 00H
	DB	0a3H, 0cfH, 00H
	DB	0a3H, 0d0H, 00H
	DB	0a3H, 0d1H, 00H
	DB	0a3H, 0d2H, 00H
	DB	0a3H, 0d3H, 00H
	DB	0a3H, 0d4H, 00H
	DB	0a3H, 0d5H, 00H
	DB	0a3H, 0d6H, 00H
	DB	0a3H, 0d7H, 00H
	DB	0a3H, 0d8H, 00H
	DB	0a3H, 0d9H, 00H
	DB	0a3H, 0daH, 00H
	DB	0a3H, 0dbH, 00H
	DB	0a3H, 0a4H, 00H
	DB	0a3H, 0ddH, 00H
	DB	0a3H, 0deH, 00H
	DB	0a3H, 0dfH, 00H
	DB	0a1H, 0aeH, 00H
	DB	0a3H, 0e1H, 00H
	DB	0a3H, 0e2H, 00H
	DB	0a3H, 0e3H, 00H
	DB	0a3H, 0e4H, 00H
	DB	0a3H, 0e5H, 00H
	DB	0a3H, 0e6H, 00H
	DB	0a3H, 0e7H, 00H
	DB	0a3H, 0e8H, 00H
	DB	0a3H, 0e9H, 00H
	DB	0a3H, 0eaH, 00H
	DB	0a3H, 0ebH, 00H
	DB	0a3H, 0ecH, 00H
	DB	0a3H, 0edH, 00H
	DB	0a3H, 0eeH, 00H
	DB	0a3H, 0efH, 00H
	DB	0a3H, 0f0H, 00H
	DB	0a3H, 0f1H, 00H
	DB	0a3H, 0f2H, 00H
	DB	0a3H, 0f3H, 00H
	DB	0a3H, 0f4H, 00H
	DB	0a3H, 0f5H, 00H
	DB	0a3H, 0f6H, 00H
	DB	0a3H, 0f7H, 00H
	DB	0a3H, 0f8H, 00H
	DB	0a3H, 0f9H, 00H
	DB	0a3H, 0faH, 00H
	DB	0a3H, 0fbH, 00H
	DB	0a3H, 0fcH, 00H
	DB	0a3H, 0fdH, 00H
	DB	0a3H, 0feH, 00H
	ORG $+12
HalfHiraTable DB 0a4H, 0a1H, 00H
	DB	0a4H, 0a2H, 00H
	DB	0a4H, 0a3H, 00H
	DB	0a4H, 0a4H, 00H
	DB	0a4H, 0a5H, 00H
	DB	0a4H, 0a6H, 00H
	DB	0a4H, 0a7H, 00H
	DB	0a4H, 0a8H, 00H
	DB	0a4H, 0a9H, 00H
	DB	0a4H, 0aaH, 00H
	DB	0a4H, 0abH, 00H
	DB	0a4H, 0acH, 00H
	DB	0a4H, 0adH, 00H
	DB	0a4H, 0aeH, 00H
	DB	0a4H, 0afH, 00H
	DB	0a4H, 0b0H, 00H
	DB	0a4H, 0b1H, 00H
	DB	0a4H, 0b2H, 00H
	DB	0a4H, 0b3H, 00H
	DB	0a4H, 0b4H, 00H
	DB	0a4H, 0b5H, 00H
	DB	0a4H, 0b6H, 00H
	DB	0a4H, 0b7H, 00H
	DB	0a4H, 0b8H, 00H
	DB	0a4H, 0b9H, 00H
	DB	0a4H, 0baH, 00H
	DB	0a4H, 0bbH, 00H
	DB	0a4H, 0bcH, 00H
	DB	0a4H, 0bdH, 00H
	DB	0a4H, 0beH, 00H
	DB	0a4H, 0bfH, 00H
	DB	0a4H, 0c0H, 00H
	DB	0a4H, 0c1H, 00H
	DB	0a4H, 0c2H, 00H
	DB	0a4H, 0c3H, 00H
	DB	0a4H, 0c4H, 00H
	DB	0a4H, 0c5H, 00H
	DB	0a4H, 0c6H, 00H
	DB	0a4H, 0c7H, 00H
	DB	0a4H, 0c8H, 00H
	DB	0a4H, 0c9H, 00H
	DB	0a4H, 0caH, 00H
	DB	0a4H, 0cbH, 00H
	DB	0a4H, 0ccH, 00H
	DB	0a4H, 0cdH, 00H
	DB	0a4H, 0ceH, 00H
	DB	0a4H, 0cfH, 00H
	DB	0a4H, 0d0H, 00H
	DB	0a4H, 0d1H, 00H
	DB	0a4H, 0d2H, 00H
	DB	0a4H, 0d3H, 00H
	DB	0a4H, 0d4H, 00H
	DB	0a4H, 0d5H, 00H
	DB	0a4H, 0d6H, 00H
	DB	0a4H, 0d7H, 00H
	DB	0a4H, 0d8H, 00H
	DB	0a4H, 0d9H, 00H
	DB	0a4H, 0daH, 00H
	DB	0a4H, 0dbH, 00H
	DB	0a4H, 0dcH, 00H
	DB	0a4H, 0ddH, 00H
	DB	0a4H, 0deH, 00H
	DB	0a4H, 0dfH, 00H
	DB	0a4H, 0e0H, 00H
	DB	0a4H, 0e1H, 00H
	DB	0a4H, 0e2H, 00H
	DB	0a4H, 0e3H, 00H
	DB	0a4H, 0e4H, 00H
	DB	0a4H, 0e5H, 00H
	DB	0a4H, 0e6H, 00H
	DB	0a4H, 0e7H, 00H
	DB	0a4H, 0e8H, 00H
	DB	0a4H, 0e9H, 00H
	DB	0a4H, 0eaH, 00H
	DB	0a4H, 0ebH, 00H
	DB	0a4H, 0ecH, 00H
	DB	0a4H, 0edH, 00H
	DB	0a4H, 0eeH, 00H
	DB	0a4H, 0efH, 00H
	DB	0a4H, 0f0H, 00H
	DB	0a4H, 0f1H, 00H
	DB	0a4H, 0f2H, 00H
	DB	0a4H, 0f3H, 00H
	DB	' ', 00H
	ORG $+1
	DB	' ', 00H
	ORG $+1
	DB	' ', 00H
	ORG $+1
	DB	0a9H, 'f', 00H
	DB	0a9H, 'g', 00H
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'!', 00H
	ORG $+1
	DB	'"', 00H
	ORG $+1
	DB	'#', 00H
	ORG $+1
	DB	'$', 00H
	ORG $+1
	DB	'%', 00H
	ORG $+1
	DB	'&', 00H
	ORG $+1
	DB	'''', 00H
	ORG $+1
	DB	'(', 00H
	ORG $+1
	DB	')', 00H
	ORG $+1
	DB	'*', 00H
	ORG $+1
	DB	'+', 00H
	ORG $+1
	DB	', ', 00H
	DB	'-', 00H
	ORG $+1
	DB	'.', 00H
	ORG $+1
	DB	'/', 00H
	ORG $+1
	DB	'0', 00H
	ORG $+1
	DB	'1', 00H
	ORG $+1
	DB	'2', 00H
	ORG $+1
	DB	'3', 00H
	ORG $+1
	DB	'4', 00H
	ORG $+1
	DB	'5', 00H
	ORG $+1
	DB	'6', 00H
	ORG $+1
	DB	'7', 00H
	ORG $+1
	DB	'8', 00H
	ORG $+1
	DB	'9', 00H
	ORG $+1
	DB	':', 00H
	ORG $+1
	DB	';', 00H
	ORG $+1
	DB	'<', 00H
	ORG $+1
	DB	'=', 00H
	ORG $+1
	DB	'>', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'@', 00H
	ORG $+1
	DB	'A', 00H
	ORG $+1
	DB	'B', 00H
	ORG $+1
	DB	'C', 00H
	ORG $+1
	DB	'D', 00H
	ORG $+1
	DB	'E', 00H
	ORG $+1
	DB	'F', 00H
	ORG $+1
	DB	'G', 00H
	ORG $+1
	DB	'H', 00H
	ORG $+1
	DB	'I', 00H
	ORG $+1
	DB	'J', 00H
	ORG $+1
	DB	'K', 00H
	ORG $+1
	DB	'L', 00H
	ORG $+1
	DB	'M', 00H
	ORG $+1
	DB	'N', 00H
	ORG $+1
	DB	'O', 00H
	ORG $+1
	DB	'P', 00H
	ORG $+1
	DB	'Q', 00H
	ORG $+1
	DB	'R', 00H
	ORG $+1
	DB	'S', 00H
	ORG $+1
	DB	'T', 00H
	ORG $+1
	DB	'U', 00H
	ORG $+1
	DB	'V', 00H
	ORG $+1
	DB	'W', 00H
	ORG $+1
	DB	'X', 00H
	ORG $+1
	DB	'Y', 00H
	ORG $+1
	DB	'Z', 00H
	ORG $+1
	DB	'[', 00H
	ORG $+1
	DB	0a3H, 0a4H, 00H
	DB	']', 00H
	ORG $+1
	DB	'^', 00H
	ORG $+1
	DB	'_', 00H
	ORG $+1
	DB	'`', 00H
	ORG $+1
	DB	'a', 00H
	ORG $+1
	DB	'b', 00H
	ORG $+1
	DB	'c', 00H
	ORG $+1
	DB	'd', 00H
	ORG $+1
	DB	'e', 00H
	ORG $+1
	DB	'f', 00H
	ORG $+1
	DB	'g', 00H
	ORG $+1
	DB	'h', 00H
	ORG $+1
	DB	'i', 00H
	ORG $+1
	DB	'j', 00H
	ORG $+1
	DB	'k', 00H
	ORG $+1
	DB	'l', 00H
	ORG $+1
	DB	'm', 00H
	ORG $+1
	DB	'n', 00H
	ORG $+1
	DB	'o', 00H
	ORG $+1
	DB	'p', 00H
	ORG $+1
	DB	'q', 00H
	ORG $+1
	DB	'r', 00H
	ORG $+1
	DB	's', 00H
	ORG $+1
	DB	't', 00H
	ORG $+1
	DB	'u', 00H
	ORG $+1
	DB	'v', 00H
	ORG $+1
	DB	'w', 00H
	ORG $+1
	DB	'x', 00H
	ORG $+1
	DB	'y', 00H
	ORG $+1
	DB	'z', 00H
	ORG $+1
	DB	'{', 00H
	ORG $+1
	DB	'|', 00H
	ORG $+1
	DB	'}', 00H
	ORG $+1
	DB	0a3H, 0feH, 00H
	ORG $+12
HalfKanaTable DB '?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	'??', 00H
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	0a5H, 0eeH, 00H
	DB	'?', 00H
	ORG $+1
	DB	0a5H, 0f0H, 00H
	DB	0a5H, 0f1H, 00H
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'??', 00H
	DB	0a5H, 0f5H, 00H
	DB	0a5H, 0f6H, 00H
	DB	0a9H, 'c', 00H
	DB	0a9H, 'd', 00H
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
	DB	'?', 00H
	ORG $+1
PUBLIC	?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z ; GetHalfChar
allocator_arg DB 01H DUP (?)
piecewise_construct DB 01H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z DD imagerel $LN126
	DD	imagerel $LN126+519
	DD	imagerel $unwind$?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z DD imagerel ?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
	DD	0ffffffffH
	DD	imagerel ?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z+69
	DD	00H
	DD	imagerel ?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z+442
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z DD 093219H
	DD	0923420H
	DD	08a010fH
	DD	0e006f008H
	DD	060037004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
	DD	0442H
; Function compile flags: /Ogtpy
;	COMDAT ?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
key$GSCopy$ = 48
ret$ = 64
__$ArrayPad$ = 1088
__$ReturnUdt$ = 1152
key$ = 1160
?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z PROC ; GetHalfChar, COMDAT
; File e:\project\other\caption2ass-master\caption2ass_pcr\commroutine.cpp
; Line 128
$LN126:
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 1104				; 00000450H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+1168], rbx
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	r14, rcx
	mov	QWORD PTR key$GSCopy$[rsp], rdx
	mov	DWORD PTR $T1[rsp], 0
; Line 130
	mov	BYTE PTR ret$[rsp], 0
	xor	edx, edx
	mov	r8d, 1023				; 000003ffH
	lea	rcx, QWORD PTR ret$[rsp+1]
	call	memset
; File e:\software\develop\vs2012\vc\include\xstring
; Line 524
	mov	rax, QWORD PTR [rdi+24]
	cmp	rax, 16
	jb	SHORT $LN21@GetHalfCha
; File e:\software\develop\vs2012\vc\include\xstddef
; Line 88
	mov	rsi, QWORD PTR [rdi]
; File e:\software\develop\vs2012\vc\include\xstring
; Line 524
	jmp	SHORT $LN22@GetHalfCha
$LN21@GetHalfCha:
	mov	rsi, rdi
$LN22@GetHalfCha:
	cmp	rax, 16
	jb	SHORT $LN29@GetHalfCha
; File e:\software\develop\vs2012\vc\include\xstddef
; Line 88
	mov	rbx, QWORD PTR [rdi]
; File e:\software\develop\vs2012\vc\include\xstring
; Line 524
	jmp	SHORT $LN30@GetHalfCha
$LN29@GetHalfCha:
	mov	rbx, rdi
$LN30@GetHalfCha:
; Line 1733
	mov	rcx, QWORD PTR [rdi+16]
; File e:\project\other\caption2ass-master\caption2ass_pcr\commroutine.cpp
; Line 139
	add	rcx, rsi
	or	rbp, -1
	cmp	rbx, rcx
	jae	$LN10@GetHalfCha
	lea	r15, OFFSET FLAT:__ImageBase
	npad	9
$LL11@GetHalfCha:
; Line 140
	xor	edx, edx
$LL9@GetHalfCha:
; File e:\software\develop\vs2012\vc\include\xstring
; Line 1733
	mov	rcx, QWORD PTR [rdi+16]
; File e:\project\other\caption2ass-master\caption2ass_pcr\commroutine.cpp
; Line 140
	add	rcx, rsi
	cmp	rbx, rcx
	jae	SHORT $LN7@GetHalfCha
; Line 142
	movsxd	rax, edx
	lea	rcx, QWORD PTR [rax+rax*2]
	movzx	eax, WORD PTR [rbx]
	cmp	ax, WORD PTR HiraTable[rcx+r15]
	jne	SHORT $LN8@GetHalfCha
; Line 144
	lea	r8, QWORD PTR HalfHiraTable[r15]
	add	r8, rcx
	mov	edx, 1024				; 00000400H
	lea	rcx, QWORD PTR ret$[rsp]
	call	QWORD PTR __imp_strcat_s
; Line 145
	add	rbx, 2
; Line 147
	mov	edx, ebp
$LN8@GetHalfCha:
; Line 140
	inc	edx
	movsxd	rax, edx
	cmp	rax, 188				; 000000bcH
	jb	SHORT $LL9@GetHalfCha
$LN7@GetHalfCha:
; Line 151
	xor	edx, edx
$LL5@GetHalfCha:
; File e:\software\develop\vs2012\vc\include\xstring
; Line 1733
	mov	rcx, QWORD PTR [rdi+16]
; File e:\project\other\caption2ass-master\caption2ass_pcr\commroutine.cpp
; Line 151
	add	rcx, rsi
	cmp	rbx, rcx
	jae	SHORT $LN3@GetHalfCha
; Line 153
	movsxd	rax, edx
	lea	rcx, QWORD PTR [rax+rax*2]
	movzx	eax, WORD PTR [rbx]
	cmp	ax, WORD PTR KanaTable[rcx+r15]
	jne	SHORT $LN4@GetHalfCha
; Line 155
	lea	r8, QWORD PTR HalfKanaTable[r15]
	add	r8, rcx
	mov	edx, 1024				; 00000400H
	lea	rcx, QWORD PTR ret$[rsp]
	call	QWORD PTR __imp_strcat_s
; Line 156
	add	rbx, 2
; Line 158
	mov	edx, ebp
$LN4@GetHalfCha:
; Line 151
	inc	edx
	movsxd	rax, edx
	cmp	rax, 94					; 0000005eH
	jb	SHORT $LL5@GetHalfCha
$LN3@GetHalfCha:
; File e:\software\develop\vs2012\vc\include\xstring
; Line 1733
	mov	rcx, QWORD PTR [rdi+16]
; File e:\project\other\caption2ass-master\caption2ass_pcr\commroutine.cpp
; Line 162
	add	rcx, rsi
	cmp	rbx, rcx
	jae	SHORT $LN1@GetHalfCha
; Line 164
	mov	r9d, 2
	mov	r8, rbx
	mov	edx, 1024				; 00000400H
	lea	rcx, QWORD PTR ret$[rsp]
	call	QWORD PTR __imp_strncat_s
; Line 165
	add	rbx, 2
$LN1@GetHalfCha:
; File e:\software\develop\vs2012\vc\include\xstring
; Line 1733
	mov	rcx, QWORD PTR [rdi+16]
; File e:\project\other\caption2ass-master\caption2ass_pcr\commroutine.cpp
; Line 139
	add	rcx, rsi
	cmp	rbx, rcx
	jb	$LL11@GetHalfCha
$LN10@GetHalfCha:
; File e:\software\develop\vs2012\vc\include\xstring
; Line 2265
	mov	QWORD PTR [r14+24], 15
; Line 2218
	mov	QWORD PTR [r14+16], 0
; File e:\software\develop\vs2012\vc\include\iosfwd
; Line 564
	mov	BYTE PTR [r14], 0
; Line 523
	cmp	BYTE PTR ret$[rsp], 0
	jne	SHORT $LN83@GetHalfCha
	xor	ebp, ebp
	jmp	SHORT $LN84@GetHalfCha
$LN83@GetHalfCha:
	lea	rax, QWORD PTR ret$[rsp]
	npad	5
$LL125@GetHalfCha:
	inc	rbp
	cmp	BYTE PTR [rax+rbp], 0
	jne	SHORT $LL125@GetHalfCha
$LN84@GetHalfCha:
; File e:\software\develop\vs2012\vc\include\xstring
; Line 1144
	mov	r8, rbp
	lea	rdx, QWORD PTR ret$[rsp]
	mov	rcx, r14
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	npad	1
; Line 2256
	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN105@GetHalfCha
; File e:\software\develop\vs2012\vc\include\xmemory0
; Line 586
	mov	rcx, QWORD PTR [rdi]
	call	QWORD PTR __imp_??3@YAXPEAX@Z
$LN105@GetHalfCha:
; File e:\software\develop\vs2012\vc\include\xstring
; Line 2265
	mov	QWORD PTR [rdi+24], 15
; Line 2218
	mov	QWORD PTR [rdi+16], 0
; File e:\software\develop\vs2012\vc\include\iosfwd
; Line 564
	mov	BYTE PTR [rdi], 0
; File e:\project\other\caption2ass-master\caption2ass_pcr\commroutine.cpp
; Line 169
	mov	rax, r14
; Line 170
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+1168]
	add	rsp, 1104				; 00000450H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z ENDP ; GetHalfChar
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
key$GSCopy$ = 48
ret$ = 64
__$ArrayPad$ = 1088
__$ReturnUdt$ = 1152
key$ = 1160
?dtor$0@?0??GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z@4HA PROC ; `GetHalfChar'::`1'::dtor$0
	mov	rcx, QWORD PTR key$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??GetHalfChar@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z@4HA ENDP ; `GetHalfChar'::`1'::dtor$0
text$x	ENDS
END
